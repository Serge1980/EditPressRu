@model EditPressRu.Models.DB.Products

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Adminka/Views/Shared/_AdmLayout.cshtml";
}

<link href="~/Content/bootstrapcss/bootstrap.css" rel="stylesheet" />
<link href="~/Content/bootstrapcss/bootstrap.min.css" rel="stylesheet" />
<script type="text/javascript" src="~/Scripts/tiny_mce/tiny_mce.js"></script>

<h2 style="text-align:center;">
    @if (Model==null)
    {
        <text>Добавление продукта</text>
    }
    else
    { <text>Редактирование</text>}

</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" style="margin:30px 40px;">
        <h4>
            @if (Model==null)
            {
                <text></text>
            }
            else
            { <text>@Model.ShName</text>}
        </h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Publish, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Publish)
                    @Html.ValidationMessageFor(model => model.Publish, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ShName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ShName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Descript, htmlAttributes: new { @class = "control-label col-md-2 " })
            <div class="col-md-10">
                @*@Html.TextAreaFor(model => model.Descript, new { htmlAttributes = new { @class = "lightbox" } })*@
                <textarea id="Descript" name="Descript">@Model.Descript</textarea>
                @Html.ValidationMessageFor(model => model.Descript, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MetaDescript, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MetaDescript, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MetaDescript, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MetaKeyWords, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MetaKeyWords, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MetaKeyWords, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Article, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Article, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Article, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OldArticle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OldArticle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OldArticle, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.NewItem, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.NewItem)
                        @Html.ValidationMessageFor(model => model.NewItem, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Hit, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Hit)
                    @Html.ValidationMessageFor(model => model.Hit, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.China, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.China)
                    @Html.ValidationMessageFor(model => model.China, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DusheUgodno, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DusheUgodno, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DusheUgodno, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Rank, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Rank, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Rank, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Sort, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Sort, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Sort, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Nalichie, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Nalichie)
                    @Html.ValidationMessageFor(model => model.Nalichie, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TopSales, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.TopSales)
                    @Html.ValidationMessageFor(model => model.TopSales, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script>

     tinyMCE.init({
            language: "ru",
            mode: "exact",
            //elements: "ItemDesc, ItemMetaDesc, ItemMetaKeywords",
            elements: "Descript,DusheUgodno",
            theme: "advanced",
            plugins: "safari, spellchecker, style, layer, table, save, advhr, advimage, advlink, emotions, iespell, inlinepopups, insertdatetime, preview, media, searchreplace, print, contextmenu,paste, directionality, fullscreen, noneditable, visualchars, nonbreaking, xhtmlxtras, template, pagebreak",
            theme_advanced_buttons1_add_before: "save,newdocument,separator",
            theme_advanced_buttons1_add: "fontselect, fontsizeselect",
            theme_advanced_buttons2_add: "separator, insertdate, inserttime, preview, separator, forecolor, backcolor",
            theme_advanced_buttons2_add_before: "cut, copy, paste, pastetext, pasteword, separator, search, replace, separator",
            theme_advanced_buttons3_add_before: "tablecontrols, separator",
            theme_advanced_buttons3_add: "emotions, iespell, media, advhr, separator, print, separator, ltr, rtl, separator, fullscreen",
            theme_advanced_buttons4: "insertlayer, moveforward, movebackward, absolute, |, styleprops,|, spellchecker, cite, abbr, acronym, del, ins, attribs,|,visualchars, nonbreaking, template, blockquote, pagebreak,|, insertfile, insertimage",
            theme_advanced_toolbar_location: "top",
            theme_advanced_toolbar_align: "left",
            theme_advanced_statusbar_location: "bottom",
            plugin_insertdate_dateFormat: "%Y-%m-%d",
            plugin_insertdate_timeFormat: "%H:%M:%S",
            theme_advanced_resize_horizontal: true,
            theme_advanced_resizing: true,
            apply_source_formatting: false,
            valid_elements: "*[*]", // разрешены все элемиенты html и их атрибуты
            remove_linebreaks: false,
            forced_root_block: '',
            spellchecker_languages: "+English=en,Danish=da, Dutch=nl, Finnish=fi, French=fr, German=de, Italian=it, Polish=pl, Portuguese=pt, Spanish=es, Swedish=sv"
        });

    $(document).ready(function () {
        
    });
    
</script>